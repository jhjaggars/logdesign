AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM role for log processor running in {{ cluster_name }} cluster with OIDC provider'

Parameters:
  ClusterName:
    Type: String
    Default: '{{ cluster_name }}'
    Description: 'Name of the OpenShift/EKS cluster (used for role naming)'
    AllowedPattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$'
    ConstraintDescription: 'Must be a valid cluster name (alphanumeric and hyphens only)'
    
  OIDCProviderURL:
    Type: String
    Default: '{{ oidc_provider_url }}'
    Description: 'OIDC provider URL for the cluster (without https://)'
    
  OIDCAudience:
    Type: String
    Default: '{{ oidc_audience }}'
    Description: 'OIDC audience for the cluster (use "openshift" for OpenShift, "sts.amazonaws.com" for EKS)'
    AllowedValues: ['openshift', 'sts.amazonaws.com']
    
  ServiceAccountNamespace:
    Type: String
    Default: '{{ service_account_namespace }}'
    Description: 'Kubernetes namespace where processor service account exists'
    
  ServiceAccountName:
    Type: String
    Default: '{{ service_account_name }}'
    Description: 'Name of the processor service account'
    
  TenantConfigTableArn:
    Type: String
    Description: 'ARN of the tenant configuration DynamoDB table'
    AllowedPattern: '^arn:aws:dynamodb:[a-z0-9-]+:[0-9]{12}:table/.+$'
    
  CentralLoggingBucketArn:
    Type: String
    Description: 'ARN of the central logging S3 bucket'
    AllowedPattern: '^arn:aws:s3:::.+$'
    
  CentralLogDistributionRoleArn:
    Type: String
    Description: 'ARN of the central log distribution role for cross-account access'
    AllowedPattern: '^arn:aws:iam::[0-9]{12}:role/.+$'
    
  ProjectName:
    Type: String
    Default: '{{ project_name }}'
    Description: 'Name of the project for resource tagging'
    
  Environment:
    Type: String
    Default: '{{ environment }}'
    AllowedValues: ['production', 'staging', 'development']
    Description: 'Environment name'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Cluster Configuration"
        Parameters:
          - ClusterName
          - OIDCProviderURL
          - OIDCAudience
      - Label:
          default: "Service Account Configuration"
        Parameters:
          - ServiceAccountNamespace
          - ServiceAccountName
      - Label:
          default: "IAM Configuration"
        Parameters:
          - TenantConfigTableArn
          - CentralLoggingBucketArn
          - CentralLogDistributionRoleArn
      - Label:
          default: "Tagging"
        Parameters:
          - ProjectName
          - Environment
    ParameterLabels:
      ClusterName:
        default: "Cluster Name"
      OIDCProviderURL:
        default: "OIDC Provider URL"
      OIDCAudience:
        default: "OIDC Audience"
      ServiceAccountNamespace:
        default: "Service Account Namespace"
      ServiceAccountName:
        default: "Service Account Name"
      TenantConfigTableArn:
        default: "Tenant Config Table ARN"
      CentralLoggingBucketArn:
        default: "Central Logging Bucket ARN"
      CentralLogDistributionRoleArn:
        default: "Central Log Distribution Role ARN"

Resources:
  # IAM role for log processor in this cluster
  ClusterProcessorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'mtl-${AWS::Region}-${Environment}-${ClusterName}-processor'
      Description: !Sub 'Role for log processor in ${ClusterName} cluster'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderURL}'
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                '{{ oidc_provider_url }}:aud': !Ref OIDCAudience
                '{{ oidc_provider_url }}:sub': !Sub 'system:serviceaccount:${ServiceAccountNamespace}:${ServiceAccountName}'
      Policies:
        - PolicyName: LogProcessorPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # DynamoDB access for tenant configurations
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                Resource: !Ref TenantConfigTableArn
              # S3 access for reading log files
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - !Ref CentralLoggingBucketArn
                  - !Sub '${CentralLoggingBucketArn}/*'
              # Assume the central log distribution role
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Ref CentralLogDistributionRoleArn
              # KMS access for encrypted S3 buckets and DynamoDB
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource: '*'
                Condition:
                  StringLike:
                    'kms:ViaService':
                      - !Sub 's3.${AWS::Region}.amazonaws.com'
                      - !Sub 'dynamodb.${AWS::Region}.amazonaws.com'
              # CloudWatch Logs for processor logging
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/k8s/processor/*'
      Tags:
        - Key: 'Project'
          Value: !Ref ProjectName
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'Cluster'
          Value: !Ref ClusterName
        - Key: 'Region'
          Value: !Ref 'AWS::Region'
        - Key: 'ManagedBy'
          Value: 'CloudFormation'
        - Key: 'Purpose'
          Value: 'LogProcessing'

Outputs:
  ClusterProcessorRoleArn:
    Description: 'ARN of the processor role for this cluster'
    Value: !GetAtt ClusterProcessorRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ClusterProcessorRoleArn'
      
  ServiceAccountAnnotation:
    Description: 'Annotation to add to processor service account for IRSA'
    Value: !Sub 'eks.amazonaws.com/role-arn: ${ClusterProcessorRole.Arn}'
    
  KustomizationExample:
    Description: 'Example kustomization patch for service account annotation'
    Value: !Sub |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: ${ServiceAccountName}
        namespace: ${ServiceAccountNamespace}
        annotations:
          eks.amazonaws.com/role-arn: ${ClusterProcessorRole.Arn}
          
  DeploymentInstructions:
    Description: 'Instructions for deploying processor with this role'
    Value: !Sub |
      1. Ensure OIDC provider is registered in AWS IAM:
         aws iam create-open-id-connect-provider \
           --url https://${OIDCProviderURL} \
           --client-id-list ${OIDCAudience}
           
      2. Apply the service account annotation to processor:
         kubectl annotate serviceaccount -n ${ServiceAccountNamespace} ${ServiceAccountName} \
           eks.amazonaws.com/role-arn=${ClusterProcessorRole.Arn}
           
      3. Configure processor with:
         - TENANT_CONFIG_TABLE from core infrastructure stack
         - CENTRAL_LOG_DISTRIBUTION_ROLE_ARN from core infrastructure stack
         - AWS_REGION=${AWS::Region}
         - Use IRSA authentication (no explicit credentials needed)