AWSTemplateFormatVersion: '2010-09-09'
Description: 'Multi-tenant logging infrastructure - Main template with nested stacks'

Parameters:
  # Basic Configuration
  Environment:
    Type: String
    Default: development
    AllowedValues: [production, staging, development]
    Description: Environment name
    
  ProjectName:
    Type: String
    Default: multi-tenant-logging
    Description: Name of the project for resource naming
    
  # EKS Configuration
  EksOidcIssuer:
    Type: String
    Default: ""
    Description: OIDC issuer URL for the EKS cluster (without https://)
    
  # Optional Stack Configuration
  IncludeSQSStack:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: Whether to deploy the SQS stack for log processing
    
  IncludeLambdaStack:
    Type: String
    Default: "false"
    AllowedValues: ["true", "false"]
    Description: Whether to deploy the Lambda stack for container-based log processing
    
  ECRImageUri:
    Type: String
    Default: ""
    Description: URI of the ECR container image for the log processor (required if IncludeLambdaStack is true)
    
  # S3 Configuration
  S3DeleteAfterDays:
    Type: Number
    Default: 7
    MinValue: 1
    Description: Number of days after which to delete logs from S3
    
  EnableS3Encryption:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: Enable S3 server-side encryption

  TemplateBucket:
    Type: String
    Description: S3 bucket containing the nested CloudFormation templates

  RandomSuffix:
    Type: String
    Description: Random suffix for unique resource naming (generated by deploy script)
    AllowedPattern: '^[a-f0-9]{8}$'
    ConstraintDescription: Must be an 8-character hexadecimal string

  CentralLogDistributionRoleArn:
    Type: String
    Description: ARN of the central log distribution role from global stack
    AllowedPattern: '^arn:aws:iam::[0-9]{12}:role/ROSA-CentralLogDistributionRole-[a-f0-9]{8}$'
    ConstraintDescription: Must be a valid IAM role ARN matching pattern

Conditions:
  HasEksOidcIssuer: !Not [!Equals [!Ref EksOidcIssuer, ""]]
  ShouldIncludeSQSStack: !Equals [!Ref IncludeSQSStack, "true"]
  ShouldIncludeLambdaStack: !Equals [!Ref IncludeLambdaStack, "true"]
  HasECRImageUri: !Not [!Equals [!Ref ECRImageUri, ""]]

Resources:
  # Core Infrastructure Stack (S3, DynamoDB, SNS/SQS, IAM)
  CoreInfrastructureStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/cloudformation/templates/core-infrastructure.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        EksOidcIssuer: !Ref EksOidcIssuer
        S3DeleteAfterDays: !Ref S3DeleteAfterDays
        EnableS3Encryption: !Ref EnableS3Encryption
        RandomSuffix: !Ref RandomSuffix
        CentralLogDistributionRoleArn: !Ref CentralLogDistributionRoleArn
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: cloudformation
        - Key: StackType
          Value: core-infrastructure
  
  # SQS Stack (Optional)
  SQSStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldIncludeSQSStack
    DependsOn: CoreInfrastructureStack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/cloudformation/templates/sqs-stack.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        LogDeliveryTopicArn: !GetAtt CoreInfrastructureStack.Outputs.LogDeliveryTopicArn
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: cloudformation
        - Key: StackType
          Value: sqs-infrastructure
  
  # Lambda Functions Stack (Optional)
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldIncludeLambdaStack
    DependsOn: CoreInfrastructureStack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/cloudformation/templates/lambda-stack.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        TenantConfigTableName: !GetAtt CoreInfrastructureStack.Outputs.TenantConfigTableName
        TenantConfigTableArn: !GetAtt CoreInfrastructureStack.Outputs.TenantConfigTableArn
        SQSQueueArn: !If [ShouldIncludeSQSStack, !GetAtt SQSStack.Outputs.LogDeliveryQueueArn, ""]
        SQSQueueUrl: !If [ShouldIncludeSQSStack, !GetAtt SQSStack.Outputs.LogDeliveryQueueUrl, ""]
        ECRImageUri: !Ref ECRImageUri
        CentralLogDistributionRoleArn: !Ref CentralLogDistributionRoleArn
        CentralLoggingBucketArn: !GetAtt CoreInfrastructureStack.Outputs.CentralLoggingBucketArn
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: cloudformation
        - Key: StackType
          Value: lambda-functions
  
  
Outputs:
  # Core Infrastructure Outputs
  CentralLoggingBucketName:
    Description: Name of the central logging S3 bucket
    Value: !GetAtt CoreInfrastructureStack.Outputs.CentralLoggingBucketName
    Export:
      Name: !Sub '${AWS::StackName}-CentralLoggingBucketName'
  
  TenantConfigTableName:
    Description: Name of the tenant configuration DynamoDB table
    Value: !GetAtt CoreInfrastructureStack.Outputs.TenantConfigTableName
    Export:
      Name: !Sub '${AWS::StackName}-TenantConfigTableName'
  
  # SQS Outputs (Optional)
  LogDeliveryQueueArn:
    Condition: ShouldIncludeSQSStack
    Description: ARN of the log delivery SQS queue
    Value: !GetAtt SQSStack.Outputs.LogDeliveryQueueArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDeliveryQueueArn'
  
  LogDeliveryQueueUrl:
    Condition: ShouldIncludeSQSStack
    Description: URL of the log delivery SQS queue
    Value: !GetAtt SQSStack.Outputs.LogDeliveryQueueUrl
    Export:
      Name: !Sub '${AWS::StackName}-LogDeliveryQueueUrl'
      
  # Lambda Outputs (Optional)
  LogDistributorFunctionName:
    Condition: ShouldIncludeLambdaStack
    Description: Name of the log distributor Lambda function
    Value: !GetAtt LambdaStack.Outputs.LogDistributorFunctionName
    Export:
      Name: !Sub '${AWS::StackName}-LogDistributorFunctionName'
  
  LogDistributorFunctionArn:
    Condition: ShouldIncludeLambdaStack
    Description: ARN of the log distributor Lambda function
    Value: !GetAtt LambdaStack.Outputs.LogDistributorFunctionArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDistributorFunctionArn'
  
  # IAM Role Outputs
  VectorRoleArn:
    Description: ARN of the Vector service account role
    Value: !GetAtt CoreInfrastructureStack.Outputs.VectorRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-VectorRoleArn'
  
  RegionalLogProcessorRoleArn:
    Description: ARN of the regional log processor role
    Value: !GetAtt CoreInfrastructureStack.Outputs.RegionalLogProcessorRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-RegionalLogProcessorRoleArn'

  CentralLogDistributionRoleArn:
    Description: ARN of the central log distribution role (from global stack)
    Value: !Ref CentralLogDistributionRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-CentralLogDistributionRoleArn'
  
  # SNS Outputs
  LogDeliveryTopicArn:
    Description: ARN of the log delivery SNS topic
    Value: !GetAtt CoreInfrastructureStack.Outputs.LogDeliveryTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDeliveryTopicArn'
  
  
  # Stack Information
  StackVersion:
    Description: Version of this CloudFormation stack (POC)
    Value: "1.0.0-poc"
    Export:
      Name: !Sub '${AWS::StackName}-StackVersion'